\documentclass{beamer}

\title{Getting Started with AI-Assisted Coding in Cursor IDE}
\author{Beginner's Guide}
\date{\\}

\begin{document}

\frame{\titlepage}

\begin{frame}{Introduction to Cursor}
\begin{itemize}
    \item Cursor is an AI-powered code editor (based on VSCode).
    \item Acts as a smart pair programmer to assist coding.
    \item Great for coding incrementally and responsibly.
\end{itemize}
\end{frame}

\begin{frame}{Step 1: Provide Full Context}
\begin{itemize}
    \item Feed Cursor as much relevant code as possible.
    \item For small projects, stuff everything into context.
    \item Example command:
    \begin{itemize}
        \item \texttt{files-to-prompt . -e ts -e tsx -e css -e md --cxml --ignore node_modules -o prompt.xml}
    \end{itemize}
    \item Use \texttt{@codebase} or specific file references in Cursor.
    \item The more context the AI has, the better the responses.
\end{itemize}
\end{frame}

\begin{frame}{Step 2: Plan the Next Change}
\begin{itemize}
    \item Clearly describe a single, incremental change.
    \item Examples:
    \begin{itemize}
        \item Add a dark mode toggle.
        \item Improve API error handling.
    \end{itemize}
    \item Ask for multiple approaches with pros/cons.
    \item Avoid asking for code immediately.
\end{itemize}
\end{frame}

\begin{frame}{Step 3: Choose and Implement}
\begin{itemize}
    \item Select the most suitable approach.
    \item Ask Cursor for a first draft of the code.
    \item Example prompt:
    \begin{itemize}
        \item \texttt{Let's implement approach 2. Can you draft the code?}
    \end{itemize}
    \item Carefully review the AI's draft.
\end{itemize}
\end{frame}

\begin{frame}{Step 4: Review and Learn}
\begin{itemize}
    \item Manually check unfamiliar APIs and functions.
    \item Ask Cursor for clarifications and explanations.
    \item Request corrections if something is off.
    \item Optionally rewind and try alternative approaches.
    \item Treat the AI like a smart but junior developer.
\end{itemize}
\end{frame}

\begin{frame}{Step 5: Test the Code}
\begin{itemize}
    \item Build and run your application.
    \item Write and run test cases if necessary.
    \item Verify that the new feature or fix works correctly.
    \item Debug issues via Cursor or manual intervention.
\end{itemize}
\end{frame}

\begin{frame}{Step 6: Git Commit}
\begin{itemize}
    \item Save your verified work by committing to Git.
    \item Write a clear and meaningful commit message.
    \item Optionally use Cursor's AI-generated commit messages.
    \item Frequent commits help track changes easily.
\end{itemize}
\end{frame}

\begin{frame}{Step 7: Suggest Next Steps}
\begin{itemize}
    \item Ask Cursor for the next logical feature or task.
    \item Maintain small, manageable changes.
    \item Plan, implement, review, test, commit \& repeat.
    \item Build your project iteratively with AI assistance.
\end{itemize}
\end{frame}

\begin{frame}{Key Mindset}
\begin{itemize}
    \item The AI is your over-eager junior intern.
    \item Stay defensive and cautious.
    \item Review everything yourself.
    \item Always maintain control and understanding.
\end{itemize}
\end{frame}

\begin{frame}{FAQ: Prompt Length}
\begin{itemize}
    \item Long prompts can cause AI confusion.
    \item Cursor automatically manages context smartly.
    \item Focus on the most relevant files and questions.
    \item Break large tasks into smaller steps.
\end{itemize}
\end{frame}

\begin{frame}{FAQ: AI Mistakes}
\begin{itemize}
    \item Review AI code like you review a human junior's code.
    \item If wrong, ask for a fix or correct manually.
    \item Testing catches AI mistakes early.
\end{itemize}
\end{frame}

\begin{frame}{FAQ: Bad Answers}
\begin{itemize}
    \item If the answer isn't useful, rephrase the question.
    \item Provide clearer, more concrete instructions.
    \item Restart the conversation if necessary.
\end{itemize}
\end{frame}

\begin{frame}{FAQ: Letting AI Autonomously Code?}
\begin{itemize}
    \item Not recommended for beginners.
    \item Always work incrementally with reviews.
    \item Even experts supervise AI work carefully.
\end{itemize}
\end{frame}

\begin{frame}{Closing Tips}
\begin{itemize}
    \item Stay curious, skeptical, and incremental.
    \item Short feedback loops lead to better results.
    \item Learn actively from each AI interaction.
    \item Enjoy building smarter with Cursor!
\end{itemize}
\end{frame}

\end{document}
